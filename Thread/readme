執行緒，運作中最小的一個單元

當程式按下跑的時候，打開工作管理員發現有一條再跑，稱為process，即行程

一個process中會有許多不同的執行緒

目的:
提升效率
提升使用者體驗
//增加程式複雜度


重要概念:
死結(deadlock)、競爭條件(Race Condition)

1.死結:兩個執行緒互相搶資源
構成死結條件:
禁止搶占(no preemption):系統資源不能被強制從一個行程中登出
持有和等待(hold and wait):一個行程可以在等待時持有系統資源
互斥(mutual exclusion):資源只能同時分給一個行程，無法多個行程共享
循環等待(circular waiting):一系列行程互相持有其他行程所需要的資源

解決方式:
執行前不能持有資源
或要擁有全部資源才能執行
或可以搶佔別人資源

2.競爭條件:
同時存或取同樣的資源

解決方式:
訂票時讓其他人不能進來
